<div class="app-content container center-layout mt-2">
    <div class="row">
        <div class="col-12" id="addDiv" align="center">
            <div style="width:50%; height:100%">
                <div style="margin-top:150px; ">
                    <form>
                        @Html.Hidden("token", (string)ViewBag.token,new {@id="token" })
                        <input id="email" type="text" class="form-control" style="margin: 30px;" placeholder="E-mail" required />
                        <input id="sifre" type="text" class="form-control" style="margin: 30px;" placeholder="Şifre" required />
                        <input id="sifretekrar" type="text" class="form-control" style="margin: 30px;" placeholder="Şifre Tekrar" required />
                        <button class="btn btn-success" style="text-align: center;" onclick="ResetToken(event)"> Sıfırla</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
        <script>
            function ResetToken(e) {
                e.preventDefault();
                var sifre = $('#sifre').val();
                var sifre_tekrar = $('#sifretekrar').val();
                console.log(sifre == sifre_tekrar);
                if (sifre != sifre_tekrar) {
                    e.preventDefault();
                    console.log("if girdi");
                    shownotification("Şifreler Eşleşmiyor", "error")
                    return;
                }
                else {
                    console.log("calisti ajax");
                    var reset = {};
                    var token = $('#token').val();
                    reset.sifre = sifre;
                    reset.email = $('#email').val();
                    reset.token = token;
                    $.ajax({
                        type: "post",
                        url: "/Kullanici/ResetPassword",
                        data: JSON.stringify(reset),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            console.log(response);
                            if (!response.succes) {
                                shownotification(response.message, "error");
                            } else {
                                shownotification(response.message, "success");
                            }
                        }
                    });
                }
            }
            function shownotification(errormessage, type) {
                type = type == undefined ? "error" : type;
                Command: toastr[type](errormessage)

                toastr.options = {
                    "closeButton": true,
                    "debug": false,
                    "newestOnTop": false,
                    "progressBar": true,
                    "positionClass": "toast-top-right",
                    "preventDuplicates": false,
                    "onclick": null,
                    "showDuration": "3000",
                    "hideDuration": "1000",
                    "timeOut": "5000",
                    "extendedTimeOut": "1000",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                }
            }
        </script>
